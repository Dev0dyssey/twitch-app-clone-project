import React from 'react';

class GoogleAuth extends React.Component {
    // Reason from isSignedIn: null - we do not know whether the use is or is not signed in
    state = { isSignedIn: null };

    componentDidMount() {
        // We need to load the specific part of the gapi library. In this case we are using the client authentication part
        window.gapi.load('client:auth2', () =>{
            window.gapi.client.init({
                // clientId generated by Google API project
                clientId: '917601408536-3im2hkuhhntq9oajrc392jq8s6o9tt0c.apps.googleusercontent.com',
                // Need to define the scope; what parts of the user profile/account we want access to
                scope: 'email'
            }).then(()=> {
                // Reference to the auth object (from the gapi)
                this.auth = window.gapi.auth2.getAuthInstance();
                // Component level state to declare whether the user is logged in
                this.setState({ isSignedIn: this.auth.isSignedIn.get() });
                // Listens to any changes made to isSignedIn and call the onAuthChange()
                this.auth.isSignedIn.listen(this.onAuthChange);
            });
        });
    }
    // Helper function that sets the isSignedIn state
    onAuthChange = () => {
        // Retrieved from the auth object declared in componentDidMount()
        this.setState({isSignedIn: this.auth.isSignedIn.get() });
    };

    // Helper methods to handle Sign In and Sign Out when button is clicked
    onSignIn = () => {
        // this.auth = auth comes from the gapi call within componentDidMount
        this.auth.signIn();
    };

    onSignOut = () => {
        this.auth.signOut();
    };

    renderAuthButton() {
        if(this.state.isSignedIn === null){
            return null;
        } else if(this.state.isSignedIn) {
            return (
                    <button onClick = {this.onSignOut} className = "ui red google button">
                        <i className = "google icon" />
                        Sign Out
                    </button>
                )
        } else {
            return (
                    <button onClick = {this.onSignIn} className = "ui red google button">
                        <i className = "google icon" />
                        Sign In with Google
                    </button>
                )
        }
    }

    render(){
        return <div>{this.renderAuthButton()}</div>
    }
}

export default GoogleAuth;